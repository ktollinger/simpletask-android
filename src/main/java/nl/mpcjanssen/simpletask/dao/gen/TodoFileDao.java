package nl.mpcjanssen.simpletask.dao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import nl.mpcjanssen.simpletask.dao.gen.TodoFile;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TODO_FILE".
*/
public class TodoFileDao extends AbstractDao<TodoFile, String> {

    public static final String TABLENAME = "TODO_FILE";

    /**
     * Properties of entity TodoFile.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Contents = new Property(0, String.class, "contents", true, "CONTENTS");
        public final static Property Date = new Property(1, java.util.Date.class, "date", false, "DATE");
    };


    public TodoFileDao(DaoConfig config) {
        super(config);
    }
    
    public TodoFileDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TODO_FILE\" (" + //
                "\"CONTENTS\" TEXT PRIMARY KEY NOT NULL ," + // 0: contents
                "\"DATE\" INTEGER NOT NULL );"); // 1: date
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TODO_FILE\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, TodoFile entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getContents());
        stmt.bindLong(2, entity.getDate().getTime());
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public TodoFile readEntity(Cursor cursor, int offset) {
        TodoFile entity = new TodoFile( //
            cursor.getString(offset + 0), // contents
            new java.util.Date(cursor.getLong(offset + 1)) // date
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, TodoFile entity, int offset) {
        entity.setContents(cursor.getString(offset + 0));
        entity.setDate(new java.util.Date(cursor.getLong(offset + 1)));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(TodoFile entity, long rowId) {
        return entity.getContents();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(TodoFile entity) {
        if(entity != null) {
            return entity.getContents();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
